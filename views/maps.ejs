<div id="mapid" style="height:100vh">

</div>
<form id="city-selector-form" method="POST" action="#">
    <input name="city" placeholder="city">
    <button type="submit" id="selector-submit-btn">Submit</button>
</form>
<div id="charts-container" style="display: flex; flex-direction: row;justify-content: space-evenly;flex-wrap: wrap;">
    <div id="pie-chart-container" style="height: 500px;width: 500px;">
        <canvas id="pieChart"></canvas>
    </div>
    <div id="radar-chart-container" style="height: 500px;width: 500px;">
        <canvas id="radarChart"></canvas>
    </div>
    <div id="bar-chart-container" style="height: 500px;width: 500px;">
        <canvas id="barChart"></canvas>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0" defer></script>
<script>
    // import "heatmap.js";
    // import '../assets/js/leaflet-heatmap';

    var testData = {
        max: 8,
        data: [{
            lat: 24.6408,
            lng: 46.7728,
            count: 3
        }, {
            lat: 50.75,
            lng: -1.55,
            count: 1
        }]
    };

    var baseLayer = L.tileLayer(
        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '...',
            maxZoom: 25
        }
    );

    var cfg = {
        // radius should be small ONLY if scaleRadius is true (or small radius is intended)
        // if scaleRadius is false it will be the constant radius used in pixels
        "radius": 2,
        "maxOpacity": .8,
        // scales the radius based on map zoom
        "scaleRadius": true,
        // if set to false the heatmap uses the global maximum for colorization
        // if activated: uses the data maximum within the current map boundaries
        //   (there will always be a red spot with useLocalExtremas true)
        "useLocalExtrema": true,
        // which field name in your data represents the latitude - default "lat"
        latField: 'lat',
        // which field name in your data represents the longitude - default "lng"
        lngField: 'lng',
        // which field name in your data represents the data value - default "value"
        valueField: 'count'
    };


    var heatmapLayer = new HeatmapOverlay(cfg);

    var map = new L.Map('mapid', {
        center: new L.LatLng(30.316496, 78.032111),
        zoom: 10,
        layers: [baseLayer, heatmapLayer]
    });

    heatmapLayer.setData(testData);
</script>
<script src="/ajax/chart.js"></script>