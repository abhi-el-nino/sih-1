<link rel="stylesheet" type="text/css" href="/css/cube.css">

<select id="maps-select">
    <option>rice</option>
    <option>wheat</option>
    <option>Dropdown Item 2</option>
    <option>Dropdown Item 3</option>
    <option>Dropdown Item 4</option>
</select>

<div style="display:flex;flex-direction: row;flex-wrap: wrap;justify-content: space-around;">
    <div id="mapid" style="height:80vh;width:60vw">

    </div>

    <div class="scene">
        <div class="cube">
            <div class="cube__face cube__face--front"><div id="pie-chart-container" style="height: 400px;width: 400px; margin: auto;">
                <canvas id="pieChart"></canvas>
            </div></div>
            <div class="cube__face cube__face--back"><div id="radar-chart-container" style="height: 400px;width: 400px; margin: auto;">
                <canvas id="radarChart"></canvas>
            </div></div>
            <div class="cube__face cube__face--right">   <div id="bar-chart-container" style="height: 400px;width: 400px; margin: auto;">
                <canvas id="barChart"></canvas>
            </div></div>
            <div class="cube__face cube__face--left">left</div>
            <div class="cube__face cube__face--top">top</div>
            <div class="cube__face cube__face--bottom">bottom</div>
        </div>
    </div>
    <diV>
        <p class="radio-group">
            <label>
                <input type="radio" name="rotate-cube-side" value="front" checked /> pie
            </label>
            <label>
                <input type="radio" name="rotate-cube-side" value="right" />bar
            </label>
            <label>
                <input type="radio" name="rotate-cube-side" value="back" /> radar
            </label>
            <label>
                <input type="radio" name="rotate-cube-side" value="left" /> left
            </label>
            <label>
                <input type="radio" name="rotate-cube-side" value="top" /> top
            </label>
            <label>
                <input type="radio" name="rotate-cube-side" value="bottom" /> bottom
            </label>
        </p>
    </diV>
</div>

<script>
    // import "heatmap.js";
    // import '../assets/js/leaflet-heatmap';

    var testData = {
        max: 20,
        data: [{
            lat: 29.383547,
            lng: 79.463956,
            count: 20
        }, {
            lat: 29.946656,
            lng: 78.152984,
            count: 17
        }, {
            lat: 29.581709,
            lng: 80.212158,
            count: 15
        }, {
            lat: 29.839006,
            lng: 79.774028,
            count: 12
        }, {
            lat: 29.59318,
            lng: 29.59318,
            count: 12
        }, {
            lat: 30.379608,
            lng: 78.438862,
            count: 12
        }, {
            lat: 30.314882,
            lng: 78.033458,
            count: 11
        }, {
            lat: 30.152586,
            lng: 78.772548,
            count: 11
        }, {
            lat: 30.746471,
            lng: 79.495277,
            count: 10
        }, {
            lat: 30.402772,
            lng: 79.331771,
            count: 9
        }]
    };

    var baseLayer = L.tileLayer(
        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '...',
        maxZoom: 25
    }
    );

    var cfg = {
        // radius should be small ONLY if scaleRadius is true (or small radius is intended)
        // if scaleRadius is false it will be the constant radius used in pixels
        "radius": 0.07,
        "maxOpacity": .8,
        // scales the radius based on map zoom
        "scaleRadius": true,
        // if set to false the heatmap uses the global maximum for colorization
        // if activated: uses the data maximum within the current map boundaries
        //   (there will always be a red spot with useLocalExtremas true)
        "useLocalExtrema": true,
        // which field name in your data represents the latitude - default "lat"
        latField: 'lat',
        // which field name in your data represents the longitude - default "lng"
        lngField: 'lng',
        // which field name in your data represents the data value - default "value"
        valueField: 'count'
    };


    var heatmapLayer = new HeatmapOverlay(cfg);

    var func = ({
        lat,
        lng
    }) => {
        console.log("rendering map", lat, lng);
        var map = new L.Map('mapid', {
            center: new L.LatLng(lat, lng),
            zoom: 9,
            layers: [baseLayer, heatmapLayer]
        });
    }
    // func();

    function showheatMapLayer(testData) {
        heatmapLayer.setData(testData);

    }
    showheatMapLayer(testData);
</script>
<script>
    function changeHandling() {
        $('#maps-select').change(function (e) {
            let crop = $(this).val();

            $.ajax({
                type: "post",
                url: "/maps/fetch-heatmap-data/crop",
                data: {
                    crop: crop
                },
                success: function (data) {
                    let testData = {
                        max: 20,
                        data: data.data.mapData
                    };
                    console.log(testData);
                    showheatMapLayer(testData);

                },
                error: function (err) {
                    console.log(err);
                }
            });
        });

    }
    changeHandling();
    var map = new L.Map('mapid', {
        center: new L.LatLng(30.152586, 78.772548),
        zoom: 8,
        layers: [baseLayer]
    });

    // var greenIcon = L.icon({
    //     iconUrl: '/img/marker.png',
    //     iconSize: [38, 70], // size of the icon 
    //     iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
    //     tooltipAnchor: [0, -41]
    // });

</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0" defer></script>
<script src="/ajax/chart.js"></script>
<script src="/ajax/cube.js"></script>